git notes link
-----------------

https://docs.google.com/document/d/15CX3cUIeor3IIdsvY9DTe_KwbsS6EMET/edit?tab=t.0

Git :- 
=========
Git is a free tool and is used as a version control system and it ws develpoed ny linux torvalds in 2005
It helps in tracking the changes and show who push the code to remote repository
It is also help in maintaining the code and helps the developers to develope in their local system individually without any disturbance to others

Go to browser and (https://github.com/git-for-windows/git/releases/download/v2.49.0.windows.1/Git-2.49.0-64-bit.exe) and install git 

It has 3stages:-

Working area -----> Where developer write the code
    ↓ --> git add .
staging area  -----> Where code push to the local repository
    ↓ --> git commit -m "any message"
Local repository  -----> Where we push the code to remote repository
    ↓ --> git push -u origin <branch>
Remote repository -----> Where we store the and mnage the code

=========================================================================================================
git remote set-url origin https://<token>@github.com/<github-user>/<repo-name>  for https connection    |
=========================================================================================================

git status ----> To check the status of the files
git logs ----> To see the logs in the local repository


Important Basic and Advanced level Git&GitHub Commands
------------------------------------------------------------

Basic Git Commands
--------------------------------
git init - Initialize a new Git repository.

git clone <repo-url> - Clone a repository into a new directory.

git status - Show the working tree status.

git add <file> - Add file contents to the index (staging area).

git add . - Stage all changes in the current directory.

git commit -m "<message>" - Commit changes with a message.

git commit -a -m "<message>" - Commit all tracked changes.

git diff - Show changes between commits, commit and working tree, etc.

git log - Show commit logs.

git show <commit> - Show the changes made in a specific commit.


Branching and Merging
-------------------------------------------

git branch - List branches.

git branch <branch-name> - Create a new branch.

git checkout <branch-name> - Switch to a branch.

git checkout -b <branch-name> - Create and switch to a new branch.

git merge <branch-name> - Merge a branch into the current branch.

git rebase <branch-name> - Reapply commits on top of another base tip.

git branch -d <branch-name> - Delete a branch.

git cherry-pick <commit> - Apply the changes introduced by some existing commits.

git merge --no-ff <branch-name> - Merge without fast-forwarding.

git rebase -i <commit> - Interactively rebase commits.



Remote Repositories
-------------------------------

git remote -v - Show remote repositories.

git remote add <name> <url> - Add a remote repository.

git fetch <remote> - Fetch changes from a remote repository.

git pull <remote> <branch> - Fetch and merge changes from a remote branch.

git push <remote> <branch> - Push changes to a remote branch.

git push --force <remote> <branch> - Force push to a remote branch.

git pull --rebase - Fetch and rebase the current branch.

git remote remove <name> - Remove a remote repository.

git remote rename <old-name> <new-name> - Rename a remote.


Stashing and Cleaning
-----------------------------------

git stash - Stash the changes in a dirty working directory.

git stash pop - Apply the latest stash and remove it from the stash list.

git stash list - List all stashed changes.

git stash apply - Apply the latest stash without removing it.

git clean -fd - Remove untracked files and directories.

git clean -fx - Remove untracked files, including ignored files.



Configuration and Help
--------------------------------

git config --global user.name "<name>" - Set global username.

git config --global user.email "<email>" - Set global email.

git config --list - List all Git configurations.

git config --global core.editor <editor> - Set the default text editor for Git.

git config --global alias.<alias-name> <command> - Create an alias for a command.

git help <command> - Get help for a specific command.

git reset <commit> - Reset the current branch to a specific commit.

git reset --hard <commit> - Reset and discard all changes.

git revert <commit> - Create a new commit that undoes a previous commit.

git blame <file> - Show what revision and author last modified each line of a file.

git shortlog - Summarize commit history.

git push origin HEAD - Push the current branch to the remote repository.

git mv <old> <new> - Move or rename a file.

git log --oneline - Show a brief log of commits.

git log --graph - Show a graphical representation of the commit history.

git blame <file> - View blame information for a file.

git reset <file> - Unstage a file.

git commit --amend - Modify the last commit.

git fetch origin - Fetch changes from the origin.
